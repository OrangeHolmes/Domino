import java.util.Random;

public class Ficha{
   private int ladoIzquierdo;
   private int ladoDerecho;
   private boolean fichaEntregada;
   
   public Ficha(){
   }
   
    public Ficha(int x, int y,boolean VoF){
    
    fichaEntregada = VoF;
    ladoIzquierdo = x;
    ladoDerecho = y ;
   }
    
    public boolean isFichaEntregada(){
      return fichaEntregada;
    }
    public void setFichaEntregada(boolean fichaEntregada){
            this.fichaEntregada = fichaEntregada;
        }
        
    public int getLadoIzquierdo(){
        return ladoIzquierdo;
    }
    
    public int getLadoDerecho(){
        return ladoDerecho;
    }
   
    public  Ficha getFicha(Ficha[] vector,int posicion) {
      
      return vector[posicion];    
      }
      
    public Ficha[] asignarFichas(Ficha [] fichasRecibidas, Ficha [] fichasEntregadas){
      Random random = new Random();
      int cantidadDeFichas= 28;
      int cantidadFichasInicio = 7;
      int aleatorio = 0;
      boolean valido = false;
      
       for(int i = 0; i < cantidadFichasInicio; i++){
        while(valido){
           
        aleatorio = random.nextInt(cantidadDeFichas);
        fichasEntregadas[i] = fichasRecibidas [aleatorio];
        valido = esValida(fichasEntregadas[i]);
      }
    }
    return fichasEntregadas;
   }
   
   public boolean noHayFichas(Ficha[] fichas){
    boolean quedan= true;
    int conteo = 0;
    Ficha ficha = new Ficha();
     for(int i =0; i<7; ++i){
     ficha = getFicha(fichas,i);
     if(ficha == null){
      ++conteo;  }
    }
     if( conteo == 7){
      quedan = true;}
     return quedan ;
   }
   
   public int getValor(Ficha[] fichas){
     Ficha ficha = new Ficha();
     int puntos =0;
     ladoIzquierdo = 0;
     ladoDerecho = 0;
     for(int i = 0; i < fichas.length; ++i){
      puntos+=ladoIzquierdo= getFicha(fichas,i).getLadoIzquierdo();
      puntos+=ladoDerecho= getFicha(fichas,i).getLadoDerecho(); 
    } 
       return puntos;}

   public Ficha escogerFicha(Ficha[] fichas,int n){
    Ficha miFicha = new Ficha();
    miFicha = fichas[n];
    return miFicha; }
   
   public boolean esValida(Ficha ficha){
   boolean es = true;
   if(ficha == null ){
    es= false;
    }
   return es;
   }
   
   public String comoColoco(int puedoI, int puedoD, int ultimoI, int ultimoD){
       String lado = null;
       if( puedoD == ultimoI){
           lado = "i";}
    else if( puedoI == ultimoI){ // Al devolver una -i o un -d se que la ficha se puede poner, pero que debo darle la vuelta a sus lados
        lado="-i";
    }
        else if(puedoI == ultimoD){
            lado = "d";}
    else if(puedoD== ultimoD){
        lado = "-d";}
    return lado;}
   
   public boolean puedoPoner(String lado,int puedoI, int puedoD, int ultimoI, int ultimoD){
    boolean sePuede = false;
    if(lado.equalsIgnoreCase("i")){
     if(puedoI == ultimoI || puedoD == ultimoI){ 
      sePuede = true; 
     }
    }
     if(lado.equalsIgnoreCase("d")){
     if(puedoI == ultimoD || puedoD == ultimoD){ 
      sePuede = true; 
     }
    }
    return sePuede;
   }
   
   public String toString(){
     return this.ladoIzquierdo + "|"+ this.ladoDerecho; 
    }
   
   
   public String mostrarFichas(Ficha [] cuales){
    String fichas=null;
    for(int i=0; i < cuales.length; ++i){
     fichas += " " + cuales[i].toString(); }
    System.out.println(fichas); 
    return fichas;
   }
     
}


